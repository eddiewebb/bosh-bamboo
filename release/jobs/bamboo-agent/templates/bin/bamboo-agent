#!/bin/bash
#
#    This is the lifecycle script (ctl) called by monit.
#
#

RUN_DIR=/var/vcap/sys/run/bamboo-agent
LOG_DIR=/var/vcap/sys/log/bamboo-agent
mkdir -p $RUN_DIR $LOG_DIR
chown -R vcap:vcap $RUN_DIR $LOG_DIR

# bamboo agent wrapper sets a PID file we'll use.
PIDFILE=/var/vcap/data/bamboo-agent/bin/bamboo-agent.pid
#java needed by start and stop jobs
export PATH=/var/vcap/packages/jdk8/bin:$PATH
export JAVA_HOME=/var/vcap/packages/jdk8/jre

BAMB_URL=<%= link('bamboo-server').p("server.protocol") %>://<%= link('bamboo-server').instances[0].address %>:<%= link('bamboo-server').p("server.port") %><% link('bamboo-server').if_p('server.context') do |prop| %><%= prop %><% end %>

#send all output from this file to one log.
logit() { while IFS='' read -r line; do echo "$(date +'%Y-%m-%d %T') $line" >> ${LOG_DIR}/bamboo-ctl.log; done; };
exec > >(logit)
exec 2>&1

# create alternate stdout and stderr handles for java
exec 3> $LOG_DIR/bamboo.stdout.log
exec 4> $LOG_DIR/bamboo.stderr.log

# log time to log file
echo ">>> Agent CTL Script Called"

case $1 in
  start)
    echo "starting..."
    export BAMBOO_HOME=/var/vcap/data/bamboo-agent
    mkdir $BAMBOO_HOME

    ## copy confiug files in temapltes
    mkdir $BAMBOO_HOME/bin
    cp  /var/vcap/jobs/bamboo-agent/config/bamboo-capabilities.properties /var/vcap/data/bamboo-agent/bin/

    # if persistent disk has agent config, use it
    if [ -f /var/vcap/store/bamboo-agent/bamboo-agent.cfg.xml ]; then
        echo "restoring agent config from persistent disk"
        # existing agent, copy ID & name to emphemeral path
        cp /var/vcap/store/bamboo-agent/bamboo-agent.cfg.xml /var/vcap/data/bamboo-agent/bamboo-agent.cfg.xml

        # if manifest enables API, cleanup any previoud tasks/reenable specific agent
        if [ "<%= p("api.enabled") %>" == "true" ];then
            echo "api enabled, closing open tasks and enabling agent"
            source /var/vcap/jobs/bamboo-agent/bin/agent-api-tasks.sh
            completeAgentTaskIfOpen #'tasks' are used by temp. maintenance.
            enableAgent
        fi
    else
        # run install (not start) to get files in place
        echo "No existing config, will create skeleton"
        java -jar \
            -Dbamboo.home=$BAMBOO_HOME \
            /var/vcap/packages/bamboo-agent/atlassian-bamboo-agent-installer-6.2.9.jar \
            ${BAMB_URL}/agentServer/ \
            install >&3 2>&4
    fi
    # set name to something useful
    python /var/vcap/jobs/bamboo-agent/bin/modifyAgentConfig.py
    echo "starting agent in JVM wrapper"
    java -jar \
        -Dbamboo.home=$BAMBOO_HOME \
        /var/vcap/packages/bamboo-agent/atlassian-bamboo-agent-installer-6.2.9.jar \
        ${BAMB_URL}/agentServer/ \
         >&3 2>&4
    echo "done"
    ;;

  stop)
    echo "stopping..."
    # if manifest enables API, disable agent on master and block for idle.
    if [ "<%= p("api.enabled") %>" == "true" ];then
        source /var/vcap/jobs/bamboo-agent/bin/agent-api-tasks.sh
        disableAgent #mark agent as disabled to prevent accepting new jobs
        purgeCapabilities #remove any previously know capaibiltieis (will be detected and set by agent on next start)
        blockUntilIdle #poll bamboo master until this agent completes open jobs
    fi
    #ask agent to shutdown nicely
    java -jar \
        /var/vcap/packages/bamboo-agent/atlassian-bamboo-agent-installer-6.2.9.jar \
         ${BAMB_URL}/agentServer/ \
        stop >&3 2>&4
    echo "Asked wrapper to stop, will sleep 10 seconds before hard kill"
    sleep 10
    echo "killing any remaining java processes"
    pkill -9 java
    echo "done"
    ;;

  *)
    echo "Usage: ctl {start|stop}" ;;

esac
